---
- name: Initializing docker swarm
  docker_swarm:
     state: present
- name: Update swarm configuration
  docker_swarm:
     state: present
     election_tick: 5
- name: Inspect swarm
  docker_swarm_info:
  ignore_errors: yes
  register: result
  
- name: Add token to dummy host1
  add_host:
      name: worker_token1
      token: "{{ result.swarm_facts.JoinTokens.Worker }}"          

#- name: Extract token 
#  shell: docker swarm join-token -q worker
#  register: swarm_token
  
#- name: Add token to dummy host
#  add_host:
#      name: worker_token2
#      token: "{{ swarm_token.stdout }}"

#- name: 
#  debug:
#      msg: "Worker token 1 is {{ hostvars['worker_token1']['token'] }}"

#- name: 
#  debug:
#      msg: "Worker token 2 is {{ hostvars['worker_token2']['token'] }}"
                      
  
#- name: Inform about basic flags
#  debug:
#      msg: |
#        Was able to talk to docker daemon: {{ result.can_talk_to_docker }}
#        Docker in Swarm mode: {{ result.docker_swarm_active }}
#        This is a Manager node: {{ result.docker_swarm_manager }}      

#- name: Get info on Docker Swarm and list of registered nodes
#  docker_swarm_facts:
#     nodes: yes
#     tasks: yes
#     services: yes
#  register: result
        
#- name: Get info on Docker Swarm and extended list of registered nodes
#  docker_swarm_info:
#     nodes: yes
#     verbose_output: yes
# register: result

#- debug:
#    var=docker swarm join-token -q worker


#- debug:
#    var=result.swarm_facts.JoinTokens.Manager
#    var=ansible_facts.default_ipv4.address

#- debug:              
#    var=ansible_facts.default_ipv4.address  
- debug: 
    msg: "IP address database server 1 variant is {{ hostvars['database'].ansible_facts.default_ipv4.address}}"
- debug: 
    msg: "IP address database server 2 variant is {{ hostvars['database']['ansible_default_ipv4']['address']}}"    